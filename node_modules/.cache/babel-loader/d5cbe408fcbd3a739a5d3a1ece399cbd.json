{"ast":null,"code":"import { CALL_API_ROUTE } from \"../components/data/ApiRoute\";\nexport async function getAllExcersice() {\n  const response = await fetch(`${CALL_API_ROUTE}/Ejercicio`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch the excersice data\");\n  }\n\n  const transformedData = [];\n\n  for (const key in data.result) {\n    const objectExcersice = {\n      IdEjercicio: key,\n      ...data.result[key]\n    };\n    transformedData.push(objectExcersice);\n  }\n\n  return transformedData;\n}\nexport async function getSingleExcersice(IdEjercicio) {\n  const response = await fetch(`${CALL_API_ROUTE}/Ejercicio/${IdEjercicio}`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch the excersice\");\n  }\n\n  const objectExcersice = {\n    IdEjercicio: IdEjercicio,\n    ...data\n  };\n  return objectExcersice;\n}\nexport async function saveExcersice(excersiceData) {\n  console.log(excersiceData.get(\"esNuevo\"));\n  let method = \"POST\";\n  let callApi = `${CALL_API_ROUTE}/Ejercicio`;\n\n  if (!excersiceData.esNuevo) {\n    method = \"PUT\";\n    callApi = `${callApi}/${excersiceData.IdEjercicio}`;\n  }\n\n  console.log(excersiceData);\n  /*const response = await fetch(`${callApi}`, {\r\n    method: method,\r\n    //headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...excersiceData,\r\n    }),\r\n  });\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n    throw new Error(\"No se pudo realizar la operacion correctamente\");\r\n  }\r\n    const excersiceObject = {\r\n    ...data,\r\n  };\r\n  return excersiceObject;*/\n}\nexport async function deleteExcersice(IdEjercicio) {\n  const response = await fetch(`${CALL_API_ROUTE}/Ejercicio/${IdEjercicio}`, {\n    method: \"DELETE\"\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not delete the excersice\");\n  }\n\n  return data;\n}","map":{"version":3,"names":["CALL_API_ROUTE","getAllExcersice","response","fetch","data","json","ok","Error","message","transformedData","key","result","objectExcersice","IdEjercicio","push","getSingleExcersice","saveExcersice","excersiceData","console","log","get","method","callApi","esNuevo","deleteExcersice"],"sources":["C:/React/Gym-Reactjs/src/lib/ExcersiceApi.js"],"sourcesContent":["import { CALL_API_ROUTE } from \"../components/data/ApiRoute\";\r\n\r\nexport async function getAllExcersice() {\r\n  const response = await fetch(`${CALL_API_ROUTE}/Ejercicio`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch the excersice data\");\r\n  }\r\n\r\n  const transformedData = [];\r\n\r\n  for (const key in data.result) {\r\n    const objectExcersice = {\r\n      IdEjercicio: key,\r\n      ...data.result[key],\r\n    };\r\n    transformedData.push(objectExcersice);\r\n  }\r\n\r\n  return transformedData;\r\n}\r\n\r\nexport async function getSingleExcersice(IdEjercicio) {\r\n  const response = await fetch(`${CALL_API_ROUTE}/Ejercicio/${IdEjercicio}`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch the excersice\");\r\n  }\r\n\r\n  const objectExcersice = {\r\n    IdEjercicio: IdEjercicio,\r\n    ...data,\r\n  };\r\n\r\n  return objectExcersice;\r\n}\r\n\r\nexport async function saveExcersice(excersiceData) {\r\n  console.log(excersiceData.get(\"esNuevo\"));\r\n\r\n  let method = \"POST\";\r\n  let callApi = `${CALL_API_ROUTE}/Ejercicio`;\r\n\r\n  if (!excersiceData.esNuevo) {\r\n    method = \"PUT\";\r\n    callApi = `${callApi}/${excersiceData.IdEjercicio}`;\r\n  }\r\n\r\n  console.log(excersiceData);\r\n\r\n  /*const response = await fetch(`${callApi}`, {\r\n    method: method,\r\n    //headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...excersiceData,\r\n    }),\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"No se pudo realizar la operacion correctamente\");\r\n  }\r\n\r\n  const excersiceObject = {\r\n    ...data,\r\n  };\r\n  return excersiceObject;*/\r\n}\r\n\r\nexport async function deleteExcersice(IdEjercicio) {\r\n  const response = await fetch(`${CALL_API_ROUTE}/Ejercicio/${IdEjercicio}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not delete the excersice\");\r\n  }\r\n\r\n  return data;\r\n}\r\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,6BAA/B;AAEA,OAAO,eAAeC,eAAf,GAAiC;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,cAAe,YAAnB,CAA5B;EACA,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;EAEA,IAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,oCAA1B,CAAN;EACD;;EAED,MAAMC,eAAe,GAAG,EAAxB;;EAEA,KAAK,MAAMC,GAAX,IAAkBN,IAAI,CAACO,MAAvB,EAA+B;IAC7B,MAAMC,eAAe,GAAG;MACtBC,WAAW,EAAEH,GADS;MAEtB,GAAGN,IAAI,CAACO,MAAL,CAAYD,GAAZ;IAFmB,CAAxB;IAIAD,eAAe,CAACK,IAAhB,CAAqBF,eAArB;EACD;;EAED,OAAOH,eAAP;AACD;AAED,OAAO,eAAeM,kBAAf,CAAkCF,WAAlC,EAA+C;EACpD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,cAAe,cAAaa,WAAY,EAA5C,CAA5B;EACA,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;EAEA,IAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,+BAA1B,CAAN;EACD;;EAED,MAAMI,eAAe,GAAG;IACtBC,WAAW,EAAEA,WADS;IAEtB,GAAGT;EAFmB,CAAxB;EAKA,OAAOQ,eAAP;AACD;AAED,OAAO,eAAeI,aAAf,CAA6BC,aAA7B,EAA4C;EACjDC,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,GAAd,CAAkB,SAAlB,CAAZ;EAEA,IAAIC,MAAM,GAAG,MAAb;EACA,IAAIC,OAAO,GAAI,GAAEtB,cAAe,YAAhC;;EAEA,IAAI,CAACiB,aAAa,CAACM,OAAnB,EAA4B;IAC1BF,MAAM,GAAG,KAAT;IACAC,OAAO,GAAI,GAAEA,OAAQ,IAAGL,aAAa,CAACJ,WAAY,EAAlD;EACD;;EAEDK,OAAO,CAACC,GAAR,CAAYF,aAAZ;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIC;AAED,OAAO,eAAeO,eAAf,CAA+BX,WAA/B,EAA4C;EACjD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,cAAe,cAAaa,WAAY,EAA5C,EAA+C;IACzEQ,MAAM,EAAE;EADiE,CAA/C,CAA5B;EAGA,MAAMjB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;EAEA,IAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,gCAA1B,CAAN;EACD;;EAED,OAAOJ,IAAP;AACD"},"metadata":{},"sourceType":"module"}